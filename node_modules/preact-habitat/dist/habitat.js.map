{"version":3,"file":"habitat.js","sources":["../src/lib/habitat.js","../src/index.js"],"sourcesContent":["import preact from 'preact'\n/**\n * Capetalize every letter after `-`\n * Used for props passed from host DOM element\n * @param  {String} str string\n * @return {String}     Capetalized string\n */\nconst _capetalize = str => {\n  return str.replace(/-([a-z])/ig, (all, letter) => {\n    return letter.toUpperCase();\n  });\n};\n\n/**\n * [_getCurrentScriptTag internal widget to provide the currently executed script]\n * @param  {document} document [Browser document object]\n * @return {HTMLElement}     [script Element]\n */\nconst _getCurrentScriptTag = () => {\n  return document.currentScript ||\n    (() => {\n      let scripts = document.getElementsByTagName('script');\n      return scripts[scripts.length - 1];\n    })();\n};\n\n/**\n * Get the props from a host element's data attributes\n * @param  {Element} tag The host element\n * @return {Object}  props object to be passed to the component\n */\nconst _propsToPassDown = (element) => {\n  let attrs = element.attributes;\n  let props = {};\n\n  // ceck for another props attached to the element\n  Object.keys(attrs).forEach(key => {\n    if (attrs.hasOwnProperty(key)) {\n      let dataAttrName = attrs[key].name;\n      if (!dataAttrName || typeof dataAttrName !== 'string') {\n        return false;\n      }\n      let propName = dataAttrName.split(/(data-props?-)/).pop();\n      propName = _capetalize(propName);\n      if (dataAttrName !== propName) {\n        let propValue = attrs[key].nodeValue;\n        props[propName] = propValue;\n      }\n    }\n  });\n  return props;\n};\n\n/**\n * Return array of 0 or more elements that will host our widget\n * @param  {id} attrId the data widget id attribute the host should have\n * @param  {document} scope  Docuemnt object or DOM Element as a scope\n * @return {Array}        Array of matching habitats\n */\nconst _hostDOMElms = ({ name = \"data-widget\", value = null, inline = true, clean = true } = {}) => {\n  let hostNodes = [];\n  let currentScript = _getCurrentScriptTag();\n  if (!value) {\n    // user did not specify where to mount - get it from script tag attributes\n    let scriptTagAttrs = currentScript.attributes;\n    // ceck for another props attached to the tag\n    Object.keys(scriptTagAttrs).forEach(key => {\n      if (scriptTagAttrs.hasOwnProperty(key)) {\n        const dataAttrName = scriptTagAttrs[key].name;\n        if (dataAttrName === 'data-mount') {\n          value = scriptTagAttrs[key].nodeValue;\n        }\n      }\n    });\n  }\n  if (!value && inline) {\n    let node = currentScript.parentNode\n    if (clean) {\n      node.innerHTML = '';\n    }\n    return [].concat(node);\n  }\n  [].forEach.call(document.querySelectorAll(`[${name}]`), queriedTag => {\n    if (value === queriedTag.getAttribute(name)) {\n      if (clean) {\n        queriedTag.innerHTML = '';\n      }\n      hostNodes.push(queriedTag);\n    }\n  });\n  return hostNodes;\n};\n\nconst _isReady = () => {\n  return (!document.attachEvent && document.readyState === 'interactive' || document.readyState === 'complete')\n}\n\n/**\n * private _render function that will be queued if the DOM is not render\n * and executed immeidatly if DOM is ready\n */\nlet _render = (widget, hostElements, root) => {\n  hostElements.forEach(elm => {\n    let hostNode = elm;\n    let props = _propsToPassDown(elm) || {};\n    return preact.render(preact.h(widget, props), hostNode, root);\n  });\n};\n\nexport {\n  _propsToPassDown,\n  _hostDOMElms,\n  _getCurrentScriptTag,\n  _capetalize,\n  _isReady,\n  _render\n};\n","import {\n  _hostDOMElms,\n  _render\n} from \"./lib/habitat\";\n\nconst habitat = Widget => {\n  // Widget represents the Preact component we need to mount\n  let widget = Widget;\n  // in case DOM has fired multipled readystate events, redner only once\n  let hasRendered = false;\n  // preact root render helper\n  let root = null;\n\n  let render = ({ name = \"data-widget\", value = null, inline = true, clean = true } = {}) => {\n    let elements = _hostDOMElms({ name, value, inline, clean });\n    if (!hasRendered && elements.length > 0) {\n      hasRendered = true;\n      return _render(widget, elements, root);\n    }\n    // document is not ready - subscurib to readystatechange event\n    document.addEventListener('DOMContentLoaded', (e) => {\n      let elements = _hostDOMElms({ name, value, inline, clean });\n      if (!hasRendered && elements.length > 0) {\n        hasRendered = true;\n        return _render(widget, elements, root);\n      }\n    })\n  };\n\n  return { render };\n};\n\nexport default habitat;\n"],"names":["_capetalize","str","replace","all","letter","toUpperCase","_getCurrentScriptTag","document","currentScript","scripts","getElementsByTagName","length","_propsToPassDown","element","attrs","attributes","props","keys","forEach","hasOwnProperty","key","dataAttrName","name","propName","split","pop","propValue","nodeValue","_hostDOMElms","value","inline","clean","hostNodes","scriptTagAttrs","node","parentNode","innerHTML","concat","call","querySelectorAll","queriedTag","getAttribute","push","_render","widget","hostElements","root","hostNode","elm","preact","render","h","habitat","Widget","hasRendered","elements","addEventListener","e"],"mappings":"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"}